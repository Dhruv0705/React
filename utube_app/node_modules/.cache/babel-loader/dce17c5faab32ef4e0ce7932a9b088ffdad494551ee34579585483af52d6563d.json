{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\Documents\\\\Virtual Studio Code\\\\React\\\\utube_app\\\\src\\\\components\\\\VideoCard.jsx\";\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Typography, Card, CardContent, CardMedia } from \"@mui/material\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nconst css = require;\nimport { demoThumbnailUrl, demoVideoUrl, demoVideoTitle, demoChannelUrl, demoChannelTitle } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCard = _ref => {\n  var _snippet$thumbnails, _snippet$thumbnails$h;\n  let {\n    video: {\n      id: {\n        videoId\n      },\n      snippet\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: {\n        xs: '100%',\n        sm: '358px',\n        md: \"320px\"\n      },\n      boxShadow: \"none\",\n      borderRadius: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: videoId ? `/video/${videoId}` : `/video/cV2gBU6hKfY`,\n      children: /*#__PURE__*/_jsxDEV(CardMedia, {\n        image: (snippet === null || snippet === void 0 ? void 0 : (_snippet$thumbnails = snippet.thumbnails) === null || _snippet$thumbnails === void 0 ? void 0 : (_snippet$thumbnails$h = _snippet$thumbnails.high) === null || _snippet$thumbnails$h === void 0 ? void 0 : _snippet$thumbnails$h.url) || demoThumbnailUrl,\n        alt: snippet === null || snippet === void 0 ? void 0 : snippet.title,\n        sx: {\n          width: {\n            xs: '100%',\n            sm: '358px'\n          },\n          height: 180\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      className: \"a\",\n      sx: {\n        backgroundColor: \"#1E1E1E\",\n        height: '106px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: videoId ? `/video/${videoId}` : demoVideoUrl,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          fontWeight: \"bold\",\n          color: \"#FFF\",\n          children: (snippet === null || snippet === void 0 ? void 0 : snippet.title.slice(0, 60)) || demoVideoTitle.slice(0, 60)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: snippet !== null && snippet !== void 0 && snippet.channelId ? `/channel/${snippet === null || snippet === void 0 ? void 0 : snippet.channelId}` : demoChannelUrl,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          color: \"gray\",\n          children: [(snippet === null || snippet === void 0 ? void 0 : snippet.channelTitle) || demoChannelTitle, /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n            sx: {\n              fontSize: \"12px\",\n              color: \"darkgrey\",\n              ml: \"5px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n};\n_c = VideoCard;\nexport default VideoCard;\nvar _c;\n$RefreshReg$(_c, \"VideoCard\");","map":{"version":3,"names":["React","Link","Typography","Card","CardContent","CardMedia","CheckCircleIcon","css","require","demoThumbnailUrl","demoVideoUrl","demoVideoTitle","demoChannelUrl","demoChannelTitle","VideoCard","video","id","videoId","snippet","width","xs","sm","md","boxShadow","borderRadius","thumbnails","high","url","title","height","backgroundColor","slice","channelId","channelTitle","fontSize","color","ml"],"sources":["C:/Users/dhruv/Documents/Virtual Studio Code/React/utube_app/src/components/VideoCard.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Link } from \"react-router-dom\"; \r\nimport { Typography, Card, CardContent, CardMedia } from \"@mui/material\";\r\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\r\nconst css = require \r\n\r\nimport { demoThumbnailUrl, demoVideoUrl, demoVideoTitle, demoChannelUrl, demoChannelTitle } from \"../utils/constants\";\r\n\r\nconst VideoCard = ({ video: { id: { videoId }, snippet } }) => (\r\n  <Card sx={{ width: { xs: '100%', sm: '358px', md: \"320px\", }, boxShadow: \"none\", borderRadius: 5 }}>\r\n    <Link to={videoId ? `/video/${videoId}` : `/video/cV2gBU6hKfY` }>\r\n      <CardMedia image={snippet?.thumbnails?.high?.url || demoThumbnailUrl} alt={snippet?.title} \r\n        sx={{ width: { xs: '100%', sm: '358px'}, height: 180 }} \r\n      />\r\n    </Link>\r\n    <CardContent className='a' sx={{ \r\n      backgroundColor: \"#1E1E1E\", \r\n      height: '106px' }}>\r\n      <Link to={videoId ? `/video/${videoId}` : demoVideoUrl } >\r\n        <Typography variant=\"subtitle1\" fontWeight=\"bold\" color=\"#FFF\">\r\n          {snippet?.title.slice(0, 60) || demoVideoTitle.slice(0, 60)}\r\n        </Typography>\r\n      </Link>\r\n      <Link to={snippet?.channelId ? `/channel/${snippet?.channelId}` : demoChannelUrl} >\r\n        <Typography variant=\"subtitle2\" color=\"gray\">\r\n          {snippet?.channelTitle || demoChannelTitle}\r\n          <CheckCircleIcon sx={{ fontSize: \"12px\", color: \"darkgrey\", ml: \"5px\" }} />\r\n        </Typography>\r\n      </Link>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default VideoCard"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,UAAU,EAAEC,IAAI,EAAEC,WAAW,EAAEC,SAAS,QAAQ,eAAe;AACxE,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,MAAMC,GAAG,GAAGC,OAAO;AAEnB,SAASC,gBAAgB,EAAEC,YAAY,EAAEC,cAAc,EAAEC,cAAc,EAAEC,gBAAgB,QAAQ,oBAAoB;AAAC;AAEtH,MAAMC,SAAS,GAAG;EAAA;EAAA,IAAC;IAAEC,KAAK,EAAE;MAAEC,EAAE,EAAE;QAAEC;MAAQ,CAAC;MAAEC;IAAQ;EAAE,CAAC;EAAA,oBACxD,QAAC,IAAI;IAAC,EAAE,EAAE;MAAEC,KAAK,EAAE;QAAEC,EAAE,EAAE,MAAM;QAAEC,EAAE,EAAE,OAAO;QAAEC,EAAE,EAAE;MAAS,CAAC;MAAEC,SAAS,EAAE,MAAM;MAAEC,YAAY,EAAE;IAAE,CAAE;IAAA,wBACjG,QAAC,IAAI;MAAC,EAAE,EAAEP,OAAO,GAAI,UAASA,OAAQ,EAAC,GAAI,oBAAqB;MAAA,uBAC9D,QAAC,SAAS;QAAC,KAAK,EAAE,CAAAC,OAAO,aAAPA,OAAO,8CAAPA,OAAO,CAAEO,UAAU,iFAAnB,oBAAqBC,IAAI,0DAAzB,sBAA2BC,GAAG,KAAIlB,gBAAiB;QAAC,GAAG,EAAES,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEU,KAAM;QACxF,EAAE,EAAE;UAAET,KAAK,EAAE;YAAEC,EAAE,EAAE,MAAM;YAAEC,EAAE,EAAE;UAAO,CAAC;UAAEQ,MAAM,EAAE;QAAI;MAAE;QAAA;QAAA;QAAA;MAAA;IACvD;MAAA;MAAA;MAAA;IAAA,QACG,eACP,QAAC,WAAW;MAAC,SAAS,EAAC,GAAG;MAAC,EAAE,EAAE;QAC7BC,eAAe,EAAE,SAAS;QAC1BD,MAAM,EAAE;MAAQ,CAAE;MAAA,wBAClB,QAAC,IAAI;QAAC,EAAE,EAAEZ,OAAO,GAAI,UAASA,OAAQ,EAAC,GAAGP,YAAc;QAAA,uBACtD,QAAC,UAAU;UAAC,OAAO,EAAC,WAAW;UAAC,UAAU,EAAC,MAAM;UAAC,KAAK,EAAC,MAAM;UAAA,UAC3D,CAAAQ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEU,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,KAAIpB,cAAc,CAACoB,KAAK,CAAC,CAAC,EAAE,EAAE;QAAC;UAAA;UAAA;UAAA;QAAA;MAChD;QAAA;QAAA;QAAA;MAAA,QACR,eACP,QAAC,IAAI;QAAC,EAAE,EAAEb,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEc,SAAS,GAAI,YAAWd,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEc,SAAU,EAAC,GAAGpB,cAAe;QAAA,uBAC/E,QAAC,UAAU;UAAC,OAAO,EAAC,WAAW;UAAC,KAAK,EAAC,MAAM;UAAA,WACzC,CAAAM,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEe,YAAY,KAAIpB,gBAAgB,eAC1C,QAAC,eAAe;YAAC,EAAE,EAAE;cAAEqB,QAAQ,EAAE,MAAM;cAAEC,KAAK,EAAE,UAAU;cAAEC,EAAE,EAAE;YAAM;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MAChE;QAAA;QAAA;QAAA;MAAA,QACR;IAAA;MAAA;MAAA;MAAA;IAAA,QACK;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAAA,CACR;AAAC,KAvBItB,SAAS;AAyBf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}